import "install_from_dir" as dir;
import "wait" as wait;
fn run(instance, context) {
    import_run("install_others_pre", instance, context);
    try {
        let applied_objs = dir::install_allowed(instance, context, `${context.package_dir}/others`, context.tenant.namespaces);
        if instance.status != () && instance.status.others != () {
            dir::remove(applied_objs, instance.status.others, instance.metadata.namespace);
        }
        let added = import_run("install_others_add", instance, context);
        switch type_of(added) {
            "map" => {
                if dir::validate_add_item(added) {
                    applied_objs.push(added);
                }
            },
            "array" => {
                applied_objs += added.filter(|i|dir::validate_add_item(i));
            }
        }
        let tmp = instance.set_status_others(applied_objs);
        wait::all(applied_objs);
    } catch (e) {
        switch type_of(e) {
            "string" => instance.set_status_other_failed(e),
            _ => instance.set_status_other_failed(json_encode(e))
        }
        throw e;
    }
    import_run("install_others_post", instance, context);
}
